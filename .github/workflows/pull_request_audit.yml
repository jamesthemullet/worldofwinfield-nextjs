env:
  ACTIONS_STEP_DEBUG: true
name: CI Tests For World Of Winfield
on:
  pull_request:
    branches: [main]
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Echo Tokens
        run: |
          echo "WOW_VERCEL_TOKEN: ${{ secrets.WOW_VERCEL_TOKEN }}"
          echo "GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}"
          echo "ORG_ID: ${{ secrets.ORG_ID }}"
          echo "WOW_PROJECT_ID: ${{ secrets.WOW_PROJECT_ID }}"
      - name: Vercel Action
        id: vercel_action
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.WOW_VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.WOW_PROJECT_ID}}
      - name: Audit URLs using Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            ${{ steps.vercel_action.outputs.preview-url }}
          budgetPath: '.github/lighthouse/budget.json'
          uploadArtifacts: true
          runs: 5
      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const result = ${{ steps.lighthouse_audit.outputs.manifest }}[0].summary
            const formatResult = (res) => Math.round((res * 100))
            Object.keys(result).forEach(key => result[key] = formatResult(result[key]))
            const score = res => res >= 90 ? 'üü¢' : res >= 50 ? 'üü†' : 'üî¥'
            const comment = [
                `‚ö°Ô∏è [Lighthouse report] for the changes in this PR:`,
                '| Category | Score |',
                '| --- | --- |',
                `| ${score(result.performance)} Performance | ${result.performance} |`,
                `| ${score(result.accessibility)} Accessibility | ${result.accessibility} |`,
                `| ${score(result['best-practices'])} Best practices | ${result['best-practices']} |`,
                `| ${score(result.seo)} SEO | ${result.seo} |`,
                `| ${score(result.pwa)} PWA | ${result.pwa} |`,
                ' ',
            ].join('\n')
             core.setOutput("comment", comment);
      - name: Add comment to PR
        id: comment_to_pr
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.issue.number }}
          header: lighthouse
          message: |
            ${{ steps.format_lighthouse_score.outputs.comment }}
  axe:
    runs-on: ubuntu-latest
    env:
      WORDPRESS_API_URL: https://www.worldofwinfield.co.uk/graphql
      GITHUB_API_SECRET: ${{ secrets.PIPELINE_GITHUB_API_SECRET }}
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x
      - run: yarn install
      - run: yarn run build
      - run: yarn dev & npx wait-on http://localhost:3000
      - name: Run axe
        run: |
          yarn add @axe-core/cli
          npx axe http://localhost:3000 --exit
